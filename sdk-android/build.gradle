plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

group = "net.activelook.sdk"
version = "0.0.1"

android {
    compileSdkVersion 29


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

def getBintrayUser() {
    if (System.getenv('BINTRAY_USER')) {
        logger.lifecycle(System.getenv('BINTRAY_USER'))
        return System.getenv('BINTRAY_USER')
    } else if (project.hasProperty('bintrayUser')) {
        return project.property('bintrayUser')
    } else {
        logger.lifecycle("Warning: Could not find BINTRAY_USER in environment or local.properties")
    }
}

def getBintrayKey() {
    if (System.getenv('BINTRAY_API_KEY')) {
        logger.lifecycle(System.getenv('BINTRAY_API_KEY'))
        return System.getenv('BINTRAY_USER')
    } else if (project.hasProperty('bintrayApiKey')) {
        return project.property('bintrayApiKey')
    } else {
        logger.lifecycle("Warning: Could not find BINTRAY_API_KEY in environment or local.properties")
    }
}

bintray {
    user = getBintrayUser()
    key = getBintrayKey()
    publications = ['mavenPublish']
    pkg {
        repo = 'maven'
        name = 'ActiveLook Android SDK'
        userOrg = user
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/ActiveLook/sdk-android'
        vcsUrl = 'https://github.com/ActiveLook/sdk-android.git'
        issueTrackerUrl = 'https://github.com/ActiveLook/sdk-android/issues'
        labels = [""]
        publicDownloadNumbers = false
        publish = false
        version {
            name = "0.0.1"
            released = new Date()
            desc = ''
            vcsTag = "0.0.1"
        }
    }
}

project.ext {
    mavSiteUrl = "https://github.com/ActiveLook/sdk-android"
    mavGitUrl = mavSiteUrl + '.git'
    mavProjectName = 'ActiveLook Android SDK'
    mavLibraryLicenses = ["Apache-2.0":'http://www.apache.org/licenses/LICENSE-2.0.txt']
}

apply from: 'https://raw.githubusercontent.com/sky-uk/gradle-maven-plugin/master/gradle-mavenizer.gradle'