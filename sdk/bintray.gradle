def getBintrayUser() {
    if (System.getenv('BINTRAY_USER')) {
        logger.lifecycle(System.getenv('BINTRAY_USER'))
        return System.getenv('BINTRAY_USER')
    } else if (project.hasProperty('BINTRAY_USER')) {
        return project.property('BINTRAY_USER')
    } else {
        logger.lifecycle("Warning: Could not find BINTRAY_USER in environment or local.properties")
    }
}

def getBintrayKey() {
    if (System.getenv('BINTRAY_API_KEY')) {
        logger.lifecycle(System.getenv('BINTRAY_API_KEY'))
        return System.getenv('BINTRAY_API_KEY')
    } else if (project.hasProperty('BINTRAY_API_KEY')) {
        return project.property('BINTRAY_API_KEY')
    } else {
        logger.lifecycle("Warning: Could not find BINTRAY_API_KEY in environment or local.properties")
    }
}

bintray {
    user = getBintrayUser()
    key = getBintrayKey()
    publications = ['Production']
    pkg {
        repo = 'maven'
        name = project.ext.name
        userOrg = user
        licenses = ['Apache-2.0']
        websiteUrl = project.ext.url
        vcsUrl = project.ext.url + '.git'
        issueTrackerUrl = project.ext.url + '/issues'
        labels = project.ext.labels
        publicDownloadNumbers = false
        publish = false
        version {
            name = version
            released = new Date()
            desc = project.ext.description
            vcsTag = version
        }
    }
}